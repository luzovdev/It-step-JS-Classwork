//Function --- это объект

//Function declaration



// function add (a,b) {
//     let result = a + b;

//     if(typeof a !== 'number' || typeof b !== 'number'){
//         return;
//     }

//     return result; //return выключает функцию
// }

// let calc = 10 / add(2,3);

// console.log(calc);


// //Function expression
// const foo = function (){
//     console.log('Im good!');
// }
// // Функция без имени - анонимная


// const test = add; // --- тоже function expression
// console.log(test(2,2));

                                                                //hosting
//hosting --- всплытие переменных
//temporary dead zone --- это та часть когда, где всплытие произошло но доступа еще нет.

//error

// console.log(a);
// let a = 0;


// foo();
// bar(); --- error

// function foo (){
//     console.log("Iam fooo");
// }

// const bar = function(){
//     console.log("Im bar");
// }

// anonimus self inworking function (IIFE)
// (function foo (){
//     console.log("Iam fooo");
// })()


//modules

// let sum = 30;
// let sumPeople = 20;
// let sumPeopleSmoking  = 40;

// const result = (function(){
//     let sumPeople = 99;
//     return sumPeople
// })()



                                //FUNCTION SCOPE BLOCK SCOPE


//BLOCK SCOPE
// let a = 2; 
// var b = 3;

// if(true){
//     let a = 4;
//     var b = 5;
// }

// console.log(a);
// console.log(b);


//FUNCTION SCOPE

// let a = 2; 

// function foo(){
//     let a = 3;
//     console.log(a); 
//     function bar (){
//         let a = 4;
//         console.log(a);
//     }
//     bar()
// }
// foo()

// console.log(a);



// let a = 2; 

// function foo(){
//     let a = 3;
//     function bar (){
//         console.log(a);
//     }
//     bar()
// }
// foo()



//===========================================TASKS======================================



//1. Написать функцию которая возвращает среднее арифм 4х чисел


// function agv (a,b,c,d){
//     return (a + b + c + d) / 4;
// }

// console.log(agv(5,5,523,67));


// ДЗ
//2. Написать функцию которая возвращает среднее арифм любого количества эл-тов чисел

// function agv2example (...arrArguments){
//     // const arrArguments = [...arguments]; --- это заменятеся в ()


// }
// arguments --- нету методов массива,  поэтому это не массив, а ПСЕВДОМАССИВ.
// agv2example(2,34,5,6,7,8)


// function avg2 (){
//     let arrArguments = [...arguments];
//     let summ = 0;
//     for(let i = 0; i < arrArguments.length; i++){
//         summ += arrArguments[i];
//     }
//     return console.log(summ / arrArguments.length); 
// }

// avg2(2,4,5,6);



//===========================================TASKS======================================







// 1. Написать функцию, которая принимает массив и степень. 
// Функция возвращает массив, в котором каждое число 
// массива возведено в указанную степень

// function getPovNumbers (pov,...arr){
//     for(let i = 0; i < arr.length; i++){
//         arr[i] = Math.pow(arr[i] , pov);
//     }
//     return console.log(arr);
// }

// getPovNumbers(2,3,4,5)


// 2. Написать функцию, которая принимает число дня недели и возвращает 
// его название, если введено число больше 7 или меньше 1 вернуть 
// сообщение об ошибке. Пример работы функции: dayOfWeek(3) вернет 
// «Среда». Вызов dayOfWeek(8) вернет «Нет такого дня недели».

// function dayOfWeek (numOfDay) {
//     if(numOfDay >= 1 && numOfDay <= 7){
//         switch(numOfDay){
//             case 1 : 
//             alert('Понедельник');
//             break;

//             case 2 : 
//             alert('Вторник');
//             break;

//             case 3 : 
//             alert('Среда');
//             break;

//             case 4 : 
//             alert('Четверг');
//             break;

//             case 5 : 
//             alert('Пятница');
//             break;

//             case 6 : 
//             alert('Суббота');
//             break;
            
//             case 7 : 
//             alert('Воскресенье');
//             break;
            
//         }
//     }else{
//         alert('Нет такого дня недели')
//     }
// }

// dayOfWeek(7)

// 3. Написать функцию, которая принимает два числа (n1 и n2) и 
// возвращает массив (8 элементов) из этих чередующихся чисел. 
// Например, передаем два числа arrMaker(2,5), функция вернет массив 
// [2,5,2,5,2,5,2,5]



// function arrMaker(n1,n2){
//     let arr = [];
//     arr.length = 8;
    
//     for(let i = 0; i < arr.length; i++){
//      if(i % 2 === 0){
//         arr.push(n1)
//      }else if (i % 2 !== 0){
//         arr.push(n2)
//      }
//     }
//     return log(arr) 
// }

// arrMaker(2,5)


// 4. Написать функцию, которая возвращает годовую оценку по предмету. 
// Функция принимает 4 оценки за четверти и возвращает годовую. В 
// начале программы пользователя спршивают оценки за четверти в 
// виде «введите оценку за 1 четверть», «введите оценку за 2 четверть» и 
// т.д. В конце работы программы выводится сообщение «ваша годовая 
// оценка N»

// 5. Напишите функцию, которая возвращает процент побед и процент 
// поражений в контру или доту. Функция принимает два параметра: 
// первый это количество побед, а второй это количество поражений.
// Функция возвращает результативность в процентах. Пример работы: 
// myStats(352,211), это значит было 352 победы и 211 поражений. 
// Функция возвращает сообщение «ваш процент побед - 62%, 
// поражений – 38%».

// 6. Дан массив [1,1,1,4,4,5,1,6,6,74,74,74,3]. Написать функцию, 
// которая вернет массив только из тех чисел, которые 
// повторялись в исходном. Массив, который возвращает 
// функция [1,4,6,74]

// 7. Написать функцию, которая принимает случайный 
// двумерный массив (разной длины) из 8 элементов. Функция 
// возвращает тот массив сумма элементов которого 
// наибольшая

// 8. Написать программу, которая спрашивает у пользователя сколько ему 
// лет. В программе должна присутствовать функция validator(), которая 
// проверяет введенное число. Если validator() вернет true, то возраст 
// можно выводить на экран в виде “Вам N лет”. Функция validator() 
// должна проверять, чтобы введенный возраст не был отрицательным, 
// меньше 5 лет и больше 100, чтобы возраст не был строкой, и не был 
// null или undefined.

// 9. Написать компьютерную игру «отгадай число». Игра на двух игроков. 
// Сначала игрок1 указывает максимальное число(max) до которого 
// можно загадывать. Потом игрок2 указывает число n от 1 до max.
// Игрок1 пытается отгадать число n, если не угадал выводится 
// сообщение «Загаданное число меньше указанного вами» или 
// «Загаданное число больше указанного вами». Выигрывает тот игрок, 
// который за наименьшее количество попыток отгадает число. 